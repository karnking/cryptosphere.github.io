{"version":3,"sources":["images/cryptocurrency.png","components/NavBar.jsx","services/cryptoApi.js","components/Loader.jsx","components/Cryptocurrencies.jsx","components/Homepage.jsx","services/exchangesApi.js","components/Exchanges.jsx","services/cryptoNewsApi.js","components/News.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","App.js","app/store.js","index.js"],"names":["NavBar","useState","activeMenu","setActiveMenu","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","className","src","icon","size","Title","level","to","onClick","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","cryptoApiHeaders","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getCryptoDetails","coinId","getCryptoHistory","timePeriod","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","Loader","Cryptocurrencies","simplified","cryptosList","data","isFetching","cryptos","setCryptos","searchTerm","setSearchTerm","filteredData","coins","filter","coin","name","toLowerCase","includes","placeholder","onChange","e","target","value","gutter","map","currency","xs","sm","lg","uuid","title","rank","extra","iconUrl","alt","hoverable","millify","price","marketCap","change","Typography","exchangesApiHeaders","exchangesApi","getExchanges","useGetExchangesQuery","Text","Panel","Collapse","Exchanges","cryptoExchanges","console","log","exchangesList","span","exchange","accordion","showArrow","header","trust_score_rank","image","year_established","trade_volume_24h_btc","trust_score","HTMLReactParser","description","id","cryptoNewsApiHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","Option","Select","demoImage","News","setNewsCategory","cryptoNews","showSearch","optionFilterProp","filterOption","input","option","children","indexOf","news","i","href","rel","thumbnail","contentUrl","style","maxWidth","maxHeight","substring","provider","moment","datePublished","startOf","fromNow","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Tooltip","Legend","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","history","length","push","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beginAtZero","CryptoDetails","useParams","setTimePeriod","cryptoDetails","stats","DollarCircleOutlined","NumberOutlined","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfMarkets","numberOfExchanges","supply","confirmed","CheckOutlined","StopOutlined","ExclamationCircleOutlined","circulating","symbol","defaultValue","date","links","link","type","App","basename","process","exact","path","color","textAlign","configureStore","reducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.454f3001.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Menu, Typography, Avatar } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  HomeOutlined,\r\n  MoneyCollectOutlined,\r\n  BulbOutlined,\r\n  FundOutlined,\r\n  MenuOutlined,\r\n} from \"@ant-design/icons\";\r\nimport icon from \"../images/cryptocurrency.png\";\r\nconst NavBar = () => {\r\n  const [activeMenu, setActiveMenu] = useState(true);\r\n  const [screenSize, setScreenSize] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => setScreenSize(window.innerWidth);\r\n    window.addEventListener(\"resize\", handleResize);\r\n    handleResize();\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (screenSize < 768) {\r\n      setActiveMenu(false);\r\n    } else {\r\n      setActiveMenu(true);\r\n    }\r\n  }, [screenSize]);\r\n  return (\r\n    <div className=\"nav-container\">\r\n      <div className=\"logo-container\">\r\n        <Avatar src={icon} size=\"large\" />\r\n        <Typography.Title level={2} className=\"logo\">\r\n          <Link to=\"/\">Cryptoverse</Link>\r\n        </Typography.Title>\r\n        <Button\r\n          className=\"menu-control-container\"\r\n          onClick={() => setActiveMenu(!activeMenu)}\r\n        >\r\n          <MenuOutlined />\r\n        </Button>\r\n      </div>\r\n      {activeMenu && (\r\n        <Menu theme=\"dark\">\r\n          <Menu.Item icon={<HomeOutlined />}>\r\n            <Link to=\"/\">Home</Link>\r\n          </Menu.Item>\r\n          <Menu.Item icon={<FundOutlined />}>\r\n            <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\r\n          </Menu.Item>\r\n          <Menu.Item icon={<MoneyCollectOutlined />}>\r\n            <Link to=\"/exchanges\">Exchanges</Link>\r\n          </Menu.Item>\r\n          <Menu.Item icon={<BulbOutlined />}>\r\n            <Link to=\"/news\">News</Link>\r\n          </Menu.Item>\r\n        </Menu>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default NavBar;\r\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nconst cryptoApiHeaders = {\r\n  \"x-rapidapi-host\": \"coinranking1.p.rapidapi.com\",\r\n  \"x-rapidapi-key\": \"ee116c5092msh79e40c6c9496bb1p128612jsn988c13148242\",\r\n};\r\nconst baseUrl = \"https://coinranking1.p.rapidapi.com\";\r\n\r\nconst createRequest = (url) => ({\r\n  url,\r\n  headers: cryptoApiHeaders,\r\n});\r\n\r\nexport const cryptoApi = createApi({\r\n  reducerPath: \"cryptoApi\",\r\n  baseQuery: fetchBaseQuery({ baseUrl }),\r\n  endpoints: (builder) => ({\r\n    getCryptos: builder.query({\r\n      query: (count) => createRequest(`/coins?limit=${count}`),\r\n    }),\r\n    getCryptoDetails: builder.query({\r\n      query: (coinId) => createRequest(`/coin/${coinId}`),\r\n    }),\r\n    getCryptoHistory: builder.query({\r\n      query: ({ coinId, timePeriod }) =>\r\n        createRequest(`/coin/${coinId}/history?timePeriod=${timePeriod}`),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetCryptosQuery,\r\n  useGetCryptoDetailsQuery,\r\n  useGetCryptoHistoryQuery,\r\n} = cryptoApi;\r\n","import React from \"react\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"loader\">\r\n      <Spin />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport millify from \"millify\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Row, Col, Input } from \"antd\";\r\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst Cryptocurrencies = ({ simplified }) => {\r\n  const count = simplified ? 10 : 96;\r\n\r\n  const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\r\n  const [cryptos, setCryptos] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  useEffect(() => {\r\n    const filteredData = cryptosList?.data?.coins.filter((coin) =>\r\n      coin.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n    setCryptos(filteredData);\r\n  }, [cryptosList, searchTerm]);\r\n  if (isFetching) return Loader;\r\n  return (\r\n    <>\r\n      {!simplified && (\r\n        <div className=\"search-crypto\">\r\n          <Input\r\n            placeholder=\"Search Cryptocurrency\"\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n        </div>\r\n      )}\r\n      <Row gutter={[32, 32]} className=\"crypto-card-container\">\r\n        {cryptos?.map((currency) => (\r\n          <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={currency.uuid}>\r\n            <Link to={`/crypto/${currency.uuid}`}>\r\n              <Card\r\n                title={`${currency.rank}. ${currency.name}`}\r\n                extra={<img className=\"crypto-image\" src={currency.iconUrl} alt=\"coin\" />}\r\n                hoverable\r\n              >\r\n                <p>Price: {millify(currency.price)}</p>\r\n                <p>Market Cap: {millify(currency.marketCap)}</p>\r\n                <p>Daily Change: {millify(currency.change)}% </p>\r\n              </Card>\r\n            </Link>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cryptocurrencies;\r\n","import React from \"react\";\r\nimport millify from \"millify\";\r\nimport { Typography, Row, Col, Statistic } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\r\nimport { Cryptocurrencies, News } from \"../components\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst { Title } = Typography;\r\nconst Homepage = () => {\r\n  const { data, isFetching } = useGetCryptosQuery(10);\r\n  if (isFetching) return Loader;\r\n  const globalStats = data?.data?.stats;\r\n  return (\r\n    <>\r\n      <Title level={2} className=\"heading\">\r\n        Global Crypto Stats\r\n      </Title>\r\n      <Row>\r\n        <Col span={12}>\r\n          <Statistic title=\"Total Cryptocurrenices\" value={globalStats.total} />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic\r\n            title=\"Total Exchanges\"\r\n            value={millify(globalStats.totalExchanges)}\r\n          />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic\r\n            title=\"Total Market Cap\"\r\n            value={millify(globalStats.totalMarketCap)}\r\n          />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic\r\n            title=\"Total 24h Volume\"\r\n            value={millify(globalStats.total24hVolume)}\r\n          />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic\r\n            title=\"Total Markets\"\r\n            value={millify(globalStats.totalMarkets)}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <div className=\"home-heading-container\">\r\n        <Title level={2} className=\"home-title\">\r\n          Top 10 Cryptocurrencies in the world\r\n        </Title>\r\n        <Title level={3} className=\"show-more\">\r\n          <Link to=\"/cryptocurrencies\">Show More</Link>\r\n        </Title>\r\n      </div>\r\n      <Cryptocurrencies simplified />\r\n      <div className=\"home-heading-container\">\r\n        <Title level={2} className=\"home-title\">\r\n          Latest Crypto News\r\n        </Title>\r\n        <Title level={3} className=\"show-more\">\r\n          <Link to=\"/news\">Show More</Link>\r\n        </Title>\r\n      </div>\r\n      <News simplified />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\nconst exchangesApiHeaders = {\r\n    'X-RapidAPI-Host': 'coingecko.p.rapidapi.com',\r\n    'X-RapidAPI-Key': 'fac9c967f1mshb0891bed0d223f5p1f977fjsnd9031551ed8e'\r\n};\r\n\r\nconst baseUrl = \"https://coingecko.p.rapidapi.com\";\r\n\r\nconst createRequest = (url) => ({\r\n  url,\r\n  headers: exchangesApiHeaders,\r\n});\r\n\r\nexport const exchangesApi = createApi({\r\n  reducerPath: \"exchangesApi\",\r\n  baseQuery: fetchBaseQuery({ baseUrl }),\r\n  endpoints: (builder) => ({\r\n    getExchanges: builder.query({\r\n      query: () => createRequest(`/exchanges`),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useGetExchangesQuery } = exchangesApi;\r\n","import React from \"react\";\r\nimport millify from \"millify\";\r\nimport { Collapse, Row, Col, Typography, Avatar } from \"antd\";\r\nimport HTMLReactParser from \"html-react-parser\";\r\n\r\nimport { useGetExchangesQuery } from \"../services/exchangesApi\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst { Text } = Typography;\r\nconst { Panel } = Collapse;\r\n\r\nconst Exchanges = () => {\r\n  const { data: cryptoExchanges, isFetching } = useGetExchangesQuery();\r\n  console.log(isFetching)\r\n  if (isFetching) return <Loader />;\r\n  const exchangesList = cryptoExchanges;\r\n  console.log(exchangesList)\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col span={6}>Exchanges</Col>\r\n        <Col span={6}>Year Established</Col>\r\n        <Col span={6}>24h Trade Volume</Col>\r\n        <Col span={6}>Trust Score</Col>\r\n      </Row>\r\n      <Row>\r\n        {exchangesList.map((exchange) => (\r\n          <Col span={24}>\r\n            <Collapse accordion>\r\n              <Panel\r\n                key={exchange.id}\r\n                showArrow={false}\r\n                header={\r\n                  <>\r\n                    <Col span={6}>\r\n                      <Text>\r\n                        <strong>{exchange.trust_score_rank}.</strong>\r\n                      </Text>\r\n                      <Avatar\r\n                        className=\"exchange-image\"\r\n                        src={exchange.image}\r\n                      />\r\n                      <Text>\r\n                        <strong>{exchange.name}</strong>\r\n                      </Text>\r\n                    </Col>\r\n                    <Col span={6}>${exchange.year_established}</Col>\r\n                    <Col span={6}>{millify(exchange.trade_volume_24h_btc)}</Col>\r\n                    <Col span={6}>{exchange.trust_score}</Col>\r\n                  </>\r\n                }\r\n              >\r\n                {HTMLReactParser(exchange.description || \"\")}\r\n              </Panel>\r\n            </Collapse>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Exchanges;\r\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\nconst cryptoNewsApiHeaders = {\r\n  \"x-bingapis-sdk\": \"true\",\r\n  \"x-rapidapi-host\": \"bing-news-search1.p.rapidapi.com/news\",\r\n  \"x-rapidapi-key\": \"ee116c5092msh79e40c6c9496bb1p128612jsn988c13148242\",\r\n};\r\n\r\nconst baseUrl = \"https://bing-news-search1.p.rapidapi.com/news\";\r\n\r\nconst createRequest = (url) => ({\r\n  url,\r\n  headers: cryptoNewsApiHeaders,\r\n});\r\n\r\nexport const cryptoNewsApi = createApi({\r\n  reducerPath: \"cryptoNewsApi\",\r\n  baseQuery: fetchBaseQuery({ baseUrl }),\r\n  endpoints: (builder) => ({\r\n    getCryptoNews: builder.query({\r\n      query: ({ newsCategory, count }) =>\r\n        createRequest(\r\n          `/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`\r\n        ),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Select, Typography, Row, Col, Avatar, Card } from \"antd\";\r\nimport moment from \"moment\";\r\nimport { useGetCryptoNewsQuery } from \"../services/cryptoNewsApi\";\r\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst { Text, Title } = Typography;\r\nconst { Option } = Select;\r\nconst demoImage =\r\n  \"http://coinrevolution.com/wp-content/uploads/2020/06/cryptonews.jpg\";\r\nconst News = ({ simplified }) => {\r\n  const [newsCategory, setNewsCategory] = useState(\"Cryptocurrency\");\r\n  const count = simplified ? 6 : 12;\r\n  const { data } = useGetCryptosQuery(100);\r\n  const { data: cryptoNews, isFetching } = useGetCryptoNewsQuery({\r\n    newsCategory: newsCategory,\r\n    count,\r\n  });\r\n  const [news, setNews] = useState([]);\r\n\r\n  if (isFetching) return Loader;\r\n  return (\r\n    <>\r\n      <Row gutter={[24, 24]}>\r\n        {!simplified && (\r\n          <Col span={24}>\r\n            <Select\r\n              showSearch\r\n              className=\"select-news\"\r\n              placeholder=\"Select a new Crypto\"\r\n              optionFilterProp=\"children\"\r\n              onChange={(value) => setNewsCategory(value)}\r\n              filterOption={(input, option) =>\r\n                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n              }\r\n            >\r\n              <Option value=\"Cryptocurrency\">Cryptocurrency</Option>\r\n              {data?.data?.coins.map((coin) => (\r\n                <Option value={coin.name}>{coin.name}</Option>\r\n              ))}\r\n            </Select>\r\n          </Col>\r\n        )}\r\n        {cryptoNews.value.map((news, i) => (\r\n          <Col xs={24} sm={12} lg={8} key={i}>\r\n            <Card hoverable className=\"news-card\">\r\n              <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\r\n                <div className=\"news-image-container\">\r\n                  <Title className=\"news-title\" level={4}>\r\n                    {news.name}\r\n                  </Title>\r\n                  <img\r\n                    src={news?.image?.thumbnail?.contentUrl || demoImage}\r\n                    alt=\"news\"\r\n                    style={{ maxWidth: \"200px\", maxHeight: \"100px\" }}\r\n                  />\r\n                </div>\r\n                <p>\r\n                  {news.description > 100\r\n                    ? `${news.description.substring(0, 100)}...`\r\n                    : news.description}\r\n                </p>\r\n                <div className=\"provider-container\">\r\n                  <div>\r\n                    <Avatar\r\n                      src={\r\n                        news.provider[0]?.image?.thumbnail?.contentUrl ||\r\n                        demoImage\r\n                      }\r\n                      alt=\"news\"\r\n                    />\r\n                    <Text className=\"provider-name\">\r\n                      {news.provider[0]?.name}\r\n                    </Text>\r\n                  </div>\r\n                  <Text>\r\n                    {moment(news.datePublished).startOf(\"ss\").fromNow()}\r\n                  </Text>\r\n                </div>\r\n              </a>\r\n            </Card>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default News;\r\n","import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { Col, Row, Typography } from \"antd\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\r\n  const coinPrice = [];\r\n  const coinTimestamp = [];\r\n  console.log(coinHistory)\r\n  for (let i = coinHistory?.data?.history?.length - 1; i >=0 ; i -= 1) {\r\n    coinPrice.push(coinHistory?.data?.history[i].price);\r\n    coinTimestamp.push(\r\n      new Date(coinHistory?.data?.history[i].timestamp*1000).toLocaleDateString(\"en-UK\")\r\n    );\r\n  }\r\n  \r\n  \r\n  const data = {\r\n    labels: coinTimestamp,\r\n    datasets: [\r\n      {\r\n        label: \"Price In USD\",\r\n        data: coinPrice,\r\n        fill: false,\r\n        backgroundColor: \"#0071bd\",\r\n        borderColor: \"#0071bd\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n  return (\r\n    <>\r\n      <Row className=\"chart-header\">\r\n        <Typography.Title level={2} className=\"chart-title\">\r\n          {coinName} Price Chart{\" \"}\r\n        </Typography.Title>\r\n        <Col className=\"price-container\">\r\n          <Typography.Title level={5} className=\"price-change\">\r\n            Change: {coinHistory?.data?.change}%\r\n          </Typography.Title>\r\n          <Typography.Title level={5} className=\"current-price\">\r\n            Current {coinName} Price: $ {currentPrice}\r\n          </Typography.Title>\r\n        </Col>\r\n      </Row>\r\n      <Line data={data} options={options} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LineChart;\r\n","import React, { useState } from \"react\";\r\nimport HTMLReactParser from \"html-react-parser\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport millify from \"millify\";\r\nimport { Col, Row, Typography, Select } from \"antd\";\r\nimport {\r\n  MoneyCollectOutlined,\r\n  DollarCircleOutlined,\r\n  FundOutlined,\r\n  ExclamationCircleOutlined,\r\n  StopOutlined,\r\n  TrophyOutlined,\r\n  CheckOutlined,\r\n  NumberOutlined,\r\n  ThunderboltOutlined,\r\n} from \"@ant-design/icons\";\r\nimport {\r\n  useGetCryptoDetailsQuery,\r\n  useGetCryptoHistoryQuery,\r\n} from \"../services/cryptoApi\";\r\nimport LineChart from \"./LineChart\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst { Title, Text } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst CryptoDetails = () => {\r\n  const { coinId } = useParams();\r\n  const [timePeriod, setTimePeriod] = useState(\"24h\");\r\n\r\n  const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\r\n  const { data: coinHistory } = useGetCryptoHistoryQuery({\r\n    coinId,\r\n    timePeriod,\r\n  });\r\n\r\n  const cryptoDetails = data?.data?.coin;\r\n\r\n  if (isFetching) return Loader;\r\n  const time = [\"3h\", \"24h\", \"7d\", \"30d\", \"3m\", \"1y\", \"3y\", \"5y\"];\r\n\r\n  const stats = [\r\n    {\r\n      title: \"Price to USD\",\r\n      value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`,\r\n      icon: <DollarCircleOutlined />,\r\n    },\r\n    { title: \"Rank\", value: cryptoDetails.rank, icon: <NumberOutlined /> },\r\n    {\r\n      title: \"24h Volume\",\r\n      value: `$ ${cryptoDetails[\"24hVolume\"] && millify(cryptoDetails[\"24hVolume\"])}`,\r\n      icon: <ThunderboltOutlined />,\r\n    },\r\n    {\r\n      title: \"Market Cap\",\r\n      value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`,\r\n      icon: <DollarCircleOutlined />,\r\n    },\r\n    {\r\n      title: \"All-time-high(daily avg.)\",\r\n      value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`,\r\n      icon: <TrophyOutlined />,\r\n    },\r\n  ];\r\n\r\n  const genericStats = [\r\n    {\r\n      title: \"Number Of Markets\",\r\n      value: cryptoDetails.numberOfMarkets,\r\n      icon: <FundOutlined />,\r\n    },\r\n    {\r\n      title: \"Number Of Exchanges\",\r\n      value: cryptoDetails.numberOfExchanges,\r\n      icon: <MoneyCollectOutlined />,\r\n    },\r\n    {\r\n      title: \"Aprroved Supply\",\r\n      value: cryptoDetails.supply.confirmed ? (\r\n        <CheckOutlined />\r\n      ) : (\r\n        <StopOutlined />\r\n      ),\r\n      icon: <ExclamationCircleOutlined />,\r\n    },\r\n    {\r\n      title: \"Total Supply\",\r\n      value: `$ ${millify(cryptoDetails.supply.circulating)}`,\r\n      icon: <ExclamationCircleOutlined />,\r\n    },\r\n    {\r\n      title: \"Circulating Supply\",\r\n      value: `$ ${millify(cryptoDetails.supply.circulating)}`,\r\n      icon: <ExclamationCircleOutlined />,\r\n    },\r\n  ];\r\n  return (\r\n    <>\r\n      <Col className=\"coin-detail-container\">\r\n        <Col className=\"coin-heading-container\">\r\n          <Title level={2} className=\"coin-name\">\r\n            {cryptoDetails.name} ({cryptoDetails.symbol}) Price\r\n          </Title>\r\n          <p>\r\n            {cryptoDetails.name} live price in us dollars. View value\r\n            statistics, market cap and supply.\r\n          </p>\r\n        </Col>\r\n        <Select\r\n          defaultValue=\"7d\"\r\n          className=\"select-timeperiod\"\r\n          placeholder=\"Select Time Period\"\r\n          onChange={(value) => setTimePeriod(value)}\r\n        >\r\n          {time.map((date) => (\r\n            <Option key={date}>{date}</Option>\r\n          ))}\r\n        </Select>\r\n        <LineChart\r\n          coinHistory={coinHistory}\r\n          currentPrice={millify(cryptoDetails.price)}\r\n          coinName={cryptoDetails.name}\r\n        />\r\n        <Col className=\"stats-container\">\r\n          <Col className=\"coin-value-statistics\">\r\n            <Col className=\"coin-value-statistics-heading\">\r\n              <Title level={3} className=\"coin-detailes-heading\">\r\n                {cryptoDetails.name} Value Statistics\r\n              </Title>\r\n              <p>An overview of showing the stats of {cryptoDetails.name}</p>\r\n            </Col>\r\n            {stats.map(({ icon, title, value }) => (\r\n              <Col className=\"coin-stats\">\r\n                <Col className=\"coin-stats-name\">\r\n                  <Text>{icon}</Text>\r\n                  <Text>{title}</Text>\r\n                </Col>\r\n                <Text className=\"stats\">{value}</Text>\r\n              </Col>\r\n            ))}\r\n          </Col>\r\n          <Col className=\"other-stats-info\">\r\n            <Col className=\"coin-value-statistics-heading\">\r\n              <Title level={3} className=\"coin-detailes-heading\">\r\n                Other Statistics\r\n              </Title>\r\n              <p>An overview showing the stats of all cryptocurrencies</p>\r\n            </Col>\r\n            {genericStats.map(({ icon, title, value }) => (\r\n              <Col className=\"coin-stats\">\r\n                <Col className=\"coin-stats-name\">\r\n                  <Text>{icon}</Text>\r\n                  <Text>{title}</Text>\r\n                </Col>\r\n                <Text className=\"stats\">{value}</Text>\r\n              </Col>\r\n            ))}\r\n          </Col>\r\n        </Col>\r\n        <Col className=\"coin-desc-link\">\r\n          <Row className=\"coin-desc\">\r\n            <Title level={3} className=\"coin-details-heading\">\r\n              What is {cryptoDetails.name}\r\n              {HTMLReactParser(cryptoDetails.description)}\r\n            </Title>\r\n          </Row>\r\n          <Col className=\"coin-links\">\r\n            <Title level={3} className=\"coin-details-heading\">\r\n              {cryptoDetails.name} Links\r\n            </Title>\r\n            {cryptoDetails.links.map((link) => (\r\n              <Row className=\"coin-link\" key={link.name}>\r\n                <Title level={5} className=\"link-name\">\r\n                  {link.type}\r\n                </Title>\r\n                <a href={link.url} target=\"_blank\" rel=\"noreferrer\">\r\n                  {link.name}\r\n                </a>\r\n              </Row>\r\n            ))}\r\n          </Col>\r\n        </Col>\r\n      </Col>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CryptoDetails;\r\n","import React from \"react\";\r\nimport { HashRouter, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nimport { Layout, Typography, Space } from \"antd\";\r\nimport \"./App.css\";\r\nimport {\r\n  NavBar,\r\n  Exchanges,\r\n  Homepage,\r\n  Example,\r\n  Cryptocurrencies,\r\n  News,\r\n  CryptoDetails,\r\n} from \"./components\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"navbar\">\r\n        <NavBar />\r\n      </div>\r\n      <div className=\"main\">\r\n      <HashRouter basename={process.env.PUBLIC_URL}>\r\n        <Layout>\r\n          <div className=\"routes\">\r\n            <Switch>\r\n              <Route exact path=\"\">\r\n                <Exchanges />\r\n              </Route>\r\n              <Route exact path=\"/exchanges\">\r\n                <Exchanges />\r\n              </Route>\r\n              <Route exact path=\"/cryptocurrencies\">\r\n                <Cryptocurrencies />\r\n              </Route>\r\n              <Route exact path=\"/crypto/:coinId\">\r\n                <CryptoDetails />\r\n              </Route>\r\n              <Route exact path=\"/news\">\r\n                <News />\r\n              </Route>\r\n            </Switch>\r\n          </div>\r\n        </Layout>\r\n        </HashRouter>\r\n\r\n        <div className=\"footer\">\r\n          <Typography.Title\r\n            level={5}\r\n            style={{ color: \"white\", textAlign: \"center\" }}\r\n          >\r\n            Cryptoverse <br />\r\n            All rights reserved\r\n          </Typography.Title>\r\n          <Space>\r\n            <Link to=\"/\">Home</Link>\r\n            <Link to=\"/exchanges\">Exchanges</Link>\r\n            <Link to=\"/news\">News</Link>\r\n          </Space>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport { cryptoApi } from \"../services/cryptoApi\";\r\nimport { cryptoNewsApi } from \"../services/cryptoNewsApi\";\r\nimport {exchangesApi} from \"../services/exchangesApi\"\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    [cryptoApi.reducerPath]: cryptoApi.reducer,\r\n    [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\r\n    [exchangesApi.reducerPath]: exchangesApi.reducer,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport App from \"./App\";\r\nimport store from \"./app/store\";\r\n\r\nimport \"antd/dist/antd.css\";\r\nReactDOM.render(\r\n  <Router >\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}