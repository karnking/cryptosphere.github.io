{"version":3,"sources":["images/cryptocurrency.png","components/NavBar.jsx","services/cryptoApi.js","components/Loader.jsx","components/Cryptocurrencies.jsx","components/Homepage.jsx","components/Exchanges.jsx","services/cryptoNewsApi.js","components/News.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","App.js","app/store.js","index.js"],"names":["NavBar","useState","activeMenu","setActiveMenu","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","className","src","icon","size","Title","level","to","onClick","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","cryptoApiHeaders","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getCryptoDetails","coinId","getCryptoHistory","timePeriod","getExchanges","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","useGetExchangesQuery","Loader","Cryptocurrencies","simplified","cryptosList","data","isFetching","cryptos","setCryptos","searchTerm","setSearchTerm","filteredData","coins","filter","coin","name","toLowerCase","includes","console","log","placeholder","onChange","e","target","value","gutter","map","currency","xs","sm","lg","uuid","title","rank","extra","iconUrl","alt","hoverable","millify","price","marketCap","change","Typography","Homepage","globalStats","stats","span","total","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","Text","Panel","Collapse","Exchanges","exchangesList","exchanges","exchange","accordion","showArrow","header","volume","numberOfMarkets","marketShare","HTMLReactParser","description","id","cryptoNewsApiHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","Option","Select","demoImage","News","setNewsCategory","cryptoNews","showSearch","optionFilterProp","filterOption","input","option","children","indexOf","news","i","href","rel","image","thumbnail","contentUrl","style","maxWidth","maxHeight","substring","provider","moment","datePublished","startOf","fromNow","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Tooltip","Legend","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","history","length","push","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beginAtZero","CryptoDetails","useParams","setTimePeriod","cryptoDetails","DollarCircleOutlined","NumberOutlined","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","supply","circulating","symbol","defaultValue","date","links","link","type","App","exact","path","color","textAlign","configureStore","reducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.0b65ebbf.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Menu, Typography, Avatar } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  HomeOutlined,\r\n  MoneyCollectOutlined,\r\n  BulbOutlined,\r\n  FundOutlined,\r\n  MenuOutlined,\r\n} from \"@ant-design/icons\";\r\nimport icon from \"../images/cryptocurrency.png\";\r\nconst NavBar = () => {\r\n  const [activeMenu, setActiveMenu] = useState(true);\r\n  const [screenSize, setScreenSize] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => setScreenSize(window.innerWidth);\r\n    window.addEventListener(\"resize\", handleResize);\r\n    handleResize();\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (screenSize < 768) {\r\n      setActiveMenu(false);\r\n    } else {\r\n      setActiveMenu(true);\r\n    }\r\n  }, [screenSize]);\r\n  return (\r\n    <div className=\"nav-container\">\r\n      <div className=\"logo-container\">\r\n        <Avatar src={icon} size=\"large\" />\r\n        <Typography.Title level={2} className=\"logo\">\r\n          <Link to=\"/\">Cryptoverse</Link>\r\n        </Typography.Title>\r\n        <Button\r\n          className=\"menu-control-container\"\r\n          onClick={() => setActiveMenu(!activeMenu)}\r\n        >\r\n          <MenuOutlined />\r\n        </Button>\r\n      </div>\r\n      {activeMenu && (\r\n        <Menu theme=\"dark\">\r\n          <Menu.Item icon={<HomeOutlined />}>\r\n            <Link to=\"/\">Home</Link>\r\n          </Menu.Item>\r\n          <Menu.Item icon={<FundOutlined />}>\r\n            <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\r\n          </Menu.Item>\r\n          <Menu.Item icon={<MoneyCollectOutlined />}>\r\n            <Link to=\"/exchanges\">Exchanges</Link>\r\n          </Menu.Item>\r\n          <Menu.Item icon={<BulbOutlined />}>\r\n            <Link to=\"/news\">News</Link>\r\n          </Menu.Item>\r\n        </Menu>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default NavBar;\r\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nconst cryptoApiHeaders = {\r\n  \"x-rapidapi-host\": \"coinranking1.p.rapidapi.com\",\r\n  \"x-rapidapi-key\": \"ee116c5092msh79e40c6c9496bb1p128612jsn988c13148242\",\r\n};\r\nconst baseUrl = \"https://coinranking1.p.rapidapi.com\";\r\n\r\nconst createRequest = (url) => ({\r\n  url,\r\n  headers: cryptoApiHeaders,\r\n});\r\n\r\nexport const cryptoApi = createApi({\r\n  reducerPath: \"cryptoApi\",\r\n  baseQuery: fetchBaseQuery({ baseUrl }),\r\n  endpoints: (builder) => ({\r\n    getCryptos: builder.query({\r\n      query: (count) => createRequest(`/coins?limit=${count}`),\r\n    }),\r\n    getCryptoDetails: builder.query({\r\n      query: (coinId) => createRequest(`/coin/${coinId}`),\r\n    }),\r\n    getCryptoHistory: builder.query({\r\n      query: ({ coinId, timePeriod }) =>\r\n        createRequest(`/coin/${coinId}/history/${timePeriod}`),\r\n    }),\r\n    getExchanges: builder.query({\r\n      query: () => createRequest(`/exchanges`),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetCryptosQuery,\r\n  useGetCryptoDetailsQuery,\r\n  useGetCryptoHistoryQuery,\r\n  useGetExchangesQuery,\r\n} = cryptoApi;\r\n","import React from \"react\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"loader\">\r\n      <Spin />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport millify from \"millify\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Row, Col, Input } from \"antd\";\r\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst Cryptocurrencies = ({ simplified }) => {\r\n  const count = simplified ? 10 : 96;\r\n\r\n  const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\r\n  const [cryptos, setCryptos] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  useEffect(() => {\r\n    const filteredData = cryptosList?.data?.coins.filter((coin) =>\r\n      coin.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n    setCryptos(filteredData);\r\n  }, [cryptosList, searchTerm]);\r\n  if (isFetching) return Loader;\r\n  if (count === 10) {\r\n    console.log(cryptosList)\r\n  }\r\n  return (\r\n    <>\r\n      {!simplified && (\r\n        <div className=\"search-crypto\">\r\n          <Input\r\n            placeholder=\"Search Cryptocurrency\"\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />24\r\n          USD\r\n          BTC\r\n          This block was mined on October 19, 2017 at 8:05 PM GMT+5:30 by BTC.com. It currently has 232,975 confirmations on the Bitcoin blockchain.\r\n          The miner(s) of this block earne\r\n        </div>\r\n      )}\r\n      <Row gutter={[32, 32]} className=\"crypto-card-container\">\r\n        {cryptos?.map((currency) => (\r\n          <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={currency.uuid}>\r\n            <Link to={`/crypto/${currency.uuid}`}>\r\n              <Card\r\n                title={`${currency.rank}. ${currency.name}`}\r\n                extra={<img className=\"crypto-image\" src={currency.iconUrl} alt=\"coin\" />}\r\n                hoverable\r\n              >\r\n                <p>Price: {millify(currency.price)}</p>\r\n                <p>Market Cap: {millify(currency.marketCap)}</p>\r\n                <p>Daily Change: {millify(currency.change)}% </p>\r\n              </Card>\r\n            </Link>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cryptocurrencies;\r\n","import React from \"react\";\r\nimport millify from \"millify\";\r\nimport { Typography, Row, Col, Statistic } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\r\nimport { Cryptocurrencies, News } from \"../components\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst { Title } = Typography;\r\nconst Homepage = () => {\r\n  const { data, isFetching } = useGetCryptosQuery(10);\r\n  if (isFetching) return Loader;\r\n  const globalStats = data?.data?.stats;\r\n  return (\r\n    <>\r\n      <Title level={2} className=\"heading\">\r\n        Global Crypto Stats\r\n      </Title>\r\n      <Row>\r\n        <Col span={12}>\r\n          <Statistic title=\"Total Cryptocurrenices\" value={globalStats.total} />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic\r\n            title=\"Total Exchanges\"\r\n            value={millify(globalStats.totalExchanges)}\r\n          />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic\r\n            title=\"Total Market Cap\"\r\n            value={millify(globalStats.totalMarketCap)}\r\n          />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic\r\n            title=\"Total 24h Volume\"\r\n            value={millify(globalStats.total24hVolume)}\r\n          />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic\r\n            title=\"Total Markets\"\r\n            value={millify(globalStats.totalMarkets)}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <div className=\"home-heading-container\">\r\n        <Title level={2} className=\"home-title\">\r\n          Top 10 Cryptocurrencies in the world\r\n        </Title>\r\n        <Title level={3} className=\"show-more\">\r\n          <Link to=\"/cryptocurrencies\">Show More</Link>\r\n        </Title>\r\n      </div>\r\n      <Cryptocurrencies simplified />\r\n      <div className=\"home-heading-container\">\r\n        <Title level={2} className=\"home-title\">\r\n          Latest Crypto News\r\n        </Title>\r\n        <Title level={3} className=\"show-more\">\r\n          <Link to=\"/news\">Show More</Link>\r\n        </Title>\r\n      </div>\r\n      <News simplified />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","import React from \"react\";\r\nimport millify from \"millify\";\r\nimport { Collapse, Row, Col, Typography, Avatar } from \"antd\";\r\nimport HTMLReactParser from \"html-react-parser\";\r\n\r\nimport { useGetExchangesQuery } from \"../services/cryptoApi\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst { Text } = Typography;\r\nconst { Panel } = Collapse;\r\n\r\nconst Exchanges = () => {\r\n  const { data, isFetching } = useGetExchangesQuery();\r\n  const exchangesList = data?.data?.exchanges;\r\n\r\n  if (isFetching) return <Loader />;\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col span={6}>Exchanges</Col>\r\n        <Col span={6}>24h Trade Volume</Col>\r\n        <Col span={6}>Markets</Col>\r\n        <Col span={6}>Change</Col>\r\n      </Row>\r\n      <Row>\r\n        {exchangesList.map((exchange) => (\r\n          <Col span={24}>\r\n            <Collapse accordion>\r\n              <Panel\r\n                key={exchange.id}\r\n                showArrow={false}\r\n                header={\r\n                  <>\r\n                    <Col span={6}>\r\n                      <Text>\r\n                        <strong>{exchange.rank}.</strong>\r\n                      </Text>\r\n                      <Avatar\r\n                        className=\"exchange-image\"\r\n                        src={exchange.iconUrl}\r\n                      />\r\n                      <Text>\r\n                        <strong>{exchange.name}</strong>\r\n                      </Text>\r\n                    </Col>\r\n                    <Col span={6}>${millify(exchange.volume)}</Col>\r\n                    <Col span={6}>{millify(exchange.numberOfMarkets)}</Col>\r\n                    <Col span={6}>{millify(exchange.marketShare)}%</Col>\r\n                  </>\r\n                }\r\n              >\r\n                {HTMLReactParser(exchange.description || \"\")}\r\n              </Panel>\r\n            </Collapse>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Exchanges;\r\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\nconst cryptoNewsApiHeaders = {\r\n  \"x-bingapis-sdk\": \"true\",\r\n  \"x-rapidapi-host\": \"bing-news-search1.p.rapidapi.com/news\",\r\n  \"x-rapidapi-key\": \"ee116c5092msh79e40c6c9496bb1p128612jsn988c13148242\",\r\n};\r\n\r\nconst baseUrl = \"https://bing-news-search1.p.rapidapi.com/news\";\r\n\r\nconst createRequest = (url) => ({\r\n  url,\r\n  headers: cryptoNewsApiHeaders,\r\n});\r\n\r\nexport const cryptoNewsApi = createApi({\r\n  reducerPath: \"cryptoNewsApi\",\r\n  baseQuery: fetchBaseQuery({ baseUrl }),\r\n  endpoints: (builder) => ({\r\n    getCryptoNews: builder.query({\r\n      query: ({ newsCategory, count }) =>\r\n        createRequest(\r\n          `/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`\r\n        ),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Select, Typography, Row, Col, Avatar, Card } from \"antd\";\r\nimport moment from \"moment\";\r\nimport { useGetCryptoNewsQuery } from \"../services/cryptoNewsApi\";\r\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst { Text, Title } = Typography;\r\nconst { Option } = Select;\r\nconst demoImage =\r\n  \"http://coinrevolution.com/wp-content/uploads/2020/06/cryptonews.jpg\";\r\nconst News = ({ simplified }) => {\r\n  const [newsCategory, setNewsCategory] = useState(\"Cryptocurrency\");\r\n  const count = simplified ? 6 : 12;\r\n  const { data } = useGetCryptosQuery(100);\r\n  const { data: cryptoNews, isFetching } = useGetCryptoNewsQuery({\r\n    newsCategory: newsCategory,\r\n    count,\r\n  });\r\n  const [news, setNews] = useState([]);\r\n\r\n  if (isFetching) return Loader;\r\n  return (\r\n    <>\r\n      <Row gutter={[24, 24]}>\r\n        {!simplified && (\r\n          <Col span={24}>\r\n            <Select\r\n              showSearch\r\n              className=\"select-news\"\r\n              placeholder=\"Select a new Crypto\"\r\n              optionFilterProp=\"children\"\r\n              onChange={(value) => setNewsCategory(value)}\r\n              filterOption={(input, option) =>\r\n                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n              }\r\n            >\r\n              <Option value=\"Cryptocurrency\">Cryptocurrency</Option>\r\n              {data?.data?.coins.map((coin) => (\r\n                <Option value={coin.name}>{coin.name}</Option>\r\n              ))}\r\n            </Select>\r\n          </Col>\r\n        )}\r\n        {cryptoNews.value.map((news, i) => (\r\n          <Col xs={24} sm={12} lg={8} key={i}>\r\n            <Card hoverable className=\"news-card\">\r\n              <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\r\n                <div className=\"news-image-container\">\r\n                  <Title className=\"news-title\" level={4}>\r\n                    {news.name}\r\n                  </Title>\r\n                  <img\r\n                    src={news?.image?.thumbnail?.contentUrl || demoImage}\r\n                    alt=\"news\"\r\n                    style={{ maxWidth: \"200px\", maxHeight: \"100px\" }}\r\n                  />\r\n                </div>\r\n                <p>\r\n                  {news.description > 100\r\n                    ? `${news.description.substring(0, 100)}...`\r\n                    : news.description}\r\n                </p>\r\n                <div className=\"provider-container\">\r\n                  <div>\r\n                    <Avatar\r\n                      src={\r\n                        news.provider[0]?.image?.thumbnail?.contentUrl ||\r\n                        demoImage\r\n                      }\r\n                      alt=\"news\"\r\n                    />\r\n                    <Text className=\"provider-name\">\r\n                      {news.provider[0]?.name}\r\n                    </Text>\r\n                  </div>\r\n                  <Text>\r\n                    {moment(news.datePublished).startOf(\"ss\").fromNow()}\r\n                  </Text>\r\n                </div>\r\n              </a>\r\n            </Card>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default News;\r\n","import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { Col, Row, Typography } from \"antd\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\r\n  const coinPrice = [];\r\n  const coinTimestamp = [];\r\n  console.log(coinHistory,currentPrice,coinName)\r\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\r\n    coinPrice.push(coinHistory?.data?.history[i].price);\r\n  }\r\n\r\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\r\n    coinTimestamp.push(\r\n      new Date(coinHistory?.data?.history[i].timestamp).toLocaleDateString()\r\n    );\r\n  }\r\n\r\n  const data = {\r\n    labels: coinTimestamp,\r\n    datasets: [\r\n      {\r\n        label: \"Price In USD\",\r\n        data: coinPrice,\r\n        fill: false,\r\n        backgroundColor: \"#0071bd\",\r\n        borderColor: \"#0071bd\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n  return (\r\n    <>\r\n      <Row className=\"chart-header\">\r\n        <Typography.Title level={2} className=\"chart-title\">\r\n          {coinName} Price Chart{\" \"}\r\n        </Typography.Title>\r\n        <Col className=\"price-container\">\r\n          <Typography.Title level={5} className=\"price-change\">\r\n            Change: {coinHistory?.data?.change}%\r\n          </Typography.Title>\r\n          <Typography.Title level={5} className=\"current-price\">\r\n            Current {coinName} Price: $ {currentPrice}\r\n          </Typography.Title>\r\n        </Col>\r\n      </Row>\r\n      <Line data={data} options={options} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LineChart;\r\n","import React, { useState } from \"react\";\r\nimport HTMLReactParser from \"html-react-parser\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport millify from \"millify\";\r\nimport { Col, Row, Typography, Select } from \"antd\";\r\nimport {\r\n  MoneyCollectOutlined,\r\n  DollarCircleOutlined,\r\n  FundOutlined,\r\n  ExclamationCircleOutlined,\r\n  StopOutlined,\r\n  TrophyOutlined,\r\n  CheckOutlined,\r\n  NumberOutlined,\r\n  ThunderboltOutlined,\r\n} from \"@ant-design/icons\";\r\nimport {\r\n  useGetCryptoDetailsQuery,\r\n  useGetCryptoHistoryQuery,\r\n} from \"../services/cryptoApi\";\r\nimport LineChart from \"./LineChart\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst { Title, Text } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst CryptoDetails = () => {\r\n  const { coinId } = useParams();\r\n  const [timePeriod, setTimePeriod] = useState(\"24h\");\r\n\r\n  const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\r\n  const { data: coinHistory } = useGetCryptoHistoryQuery({\r\n    coinId,\r\n    timePeriod,\r\n  });\r\n  if (isFetching) return Loader;\r\n  console.log(coinHistory)\r\n  const cryptoDetails = data?.data?.coin;\r\n\r\n  const time = [\"3h\", \"24h\", \"7d\", \"30d\", \"3m\", \"1y\", \"3y\", \"5y\"];\r\n\r\n  const stats = [\r\n    {\r\n      title: \"Price to USD\",\r\n      value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`,\r\n      icon: <DollarCircleOutlined />,\r\n    },\r\n    { title: \"Rank\", value: cryptoDetails.rank, icon: <NumberOutlined /> },\r\n    {\r\n      title: \"24h Volume\",\r\n      value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`,\r\n      icon: <ThunderboltOutlined />,\r\n    },\r\n    {\r\n      title: \"Market Cap\",\r\n      value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`,\r\n      icon: <DollarCircleOutlined />,\r\n    },\r\n    {\r\n      title: \"All-time-high(daily avg.)\",\r\n      value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`,\r\n      icon: <TrophyOutlined />,\r\n    },\r\n  ];\r\n\r\n  const genericStats = [\r\n    {\r\n      title: \"Number Of Markets\",\r\n      value: cryptoDetails.numberOfMarkets,\r\n      icon: <FundOutlined />,\r\n    },\r\n    {\r\n      title: \"Number Of Exchanges\",\r\n      value: cryptoDetails.numberOfExchanges,\r\n      icon: <MoneyCollectOutlined />,\r\n    },\r\n    {\r\n      title: \"Aprroved Supply\",\r\n      value: cryptoDetails.approvedSupply ? (\r\n        <CheckOutlined />\r\n      ) : (\r\n        <StopOutlined />\r\n      ),\r\n      icon: <ExclamationCircleOutlined />,\r\n    },\r\n    {\r\n      title: \"Total Supply\",\r\n      value: `$ ${millify(cryptoDetails.supply.total)}`,\r\n      icon: <ExclamationCircleOutlined />,\r\n    },\r\n    {\r\n      title: \"Circulating Supply\",\r\n      value: `$ ${millify(cryptoDetails.supply.circulating)}`,\r\n      icon: <ExclamationCircleOutlined />,\r\n    },\r\n  ];\r\n  return (\r\n    <>\r\n      <Col className=\"coin-detail-container\">\r\n        <Col className=\"coin-heading-container\">\r\n          <Title level={2} className=\"coin-name\">\r\n            {cryptoDetails.name} ({cryptoDetails.symbol}) Price\r\n          </Title>\r\n          <p>\r\n            {cryptoDetails.name} live price in us dollars. View value\r\n            statistics, market cap and supply.\r\n          </p>\r\n        </Col>\r\n        <Select\r\n          defaultValue=\"7d\"\r\n          className=\"select-timeperiod\"\r\n          placeholder=\"Select Time Period\"\r\n          onChange={(value) => setTimePeriod(value)}\r\n        >\r\n          {time.map((date) => (\r\n            <Option key={date}>{date}</Option>\r\n          ))}\r\n        </Select>\r\n        <LineChart\r\n          coinHistory={coinHistory}\r\n          currentPrice={millify(cryptoDetails.price)}\r\n          coinName={cryptoDetails.name}\r\n        />\r\n        <Col className=\"stats-container\">\r\n          <Col className=\"coin-value-statistics\">\r\n            <Col className=\"coin-value-statistics-heading\">\r\n              <Title level={3} className=\"coin-detailes-heading\">\r\n                {cryptoDetails.name} Value Statistics\r\n              </Title>\r\n              <p>An overview of showing the stats of {cryptoDetails.name}</p>\r\n            </Col>\r\n            {stats.map(({ icon, title, value }) => (\r\n              <Col className=\"coin-stats\">\r\n                <Col className=\"coin-stats-name\">\r\n                  <Text>{icon}</Text>\r\n                  <Text>{title}</Text>\r\n                </Col>\r\n                <Text className=\"stats\">{value}</Text>\r\n              </Col>\r\n            ))}\r\n          </Col>\r\n          <Col className=\"other-stats-info\">\r\n            <Col className=\"coin-value-statistics-heading\">\r\n              <Title level={3} className=\"coin-detailes-heading\">\r\n                Other Statistics\r\n              </Title>\r\n              <p>An overview showing the stats of all cryptocurrencies</p>\r\n            </Col>\r\n            {genericStats.map(({ icon, title, value }) => (\r\n              <Col className=\"coin-stats\">\r\n                <Col className=\"coin-stats-name\">\r\n                  <Text>{icon}</Text>\r\n                  <Text>{title}</Text>\r\n                </Col>\r\n                <Text className=\"stats\">{value}</Text>\r\n              </Col>\r\n            ))}\r\n          </Col>\r\n        </Col>\r\n        <Col className=\"coin-desc-link\">\r\n          <Row className=\"coin-desc\">\r\n            <Title level={3} className=\"coin-details-heading\">\r\n              What is {cryptoDetails.name}\r\n              {HTMLReactParser(cryptoDetails.description)}\r\n            </Title>\r\n          </Row>\r\n          <Col className=\"coin-links\">\r\n            <Title level={3} className=\"coin-details-heading\">\r\n              {cryptoDetails.name} Links\r\n            </Title>\r\n            {cryptoDetails.links.map((link) => (\r\n              <Row className=\"coin-link\" key={link.name}>\r\n                <Title level={5} className=\"link-name\">\r\n                  {link.type}\r\n                </Title>\r\n                <a href={link.url} target=\"_blank\" rel=\"noreferrer\">\r\n                  {link.name}\r\n                </a>\r\n              </Row>\r\n            ))}\r\n          </Col>\r\n        </Col>\r\n      </Col>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CryptoDetails;\r\n","import React from \"react\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport { Layout, Typography, Space } from \"antd\";\r\nimport \"./App.css\";\r\nimport {\r\n  NavBar,\r\n  Exchanges,\r\n  Homepage,\r\n  Example,\r\n  Cryptocurrencies,\r\n  News,\r\n  CryptoDetails,\r\n} from \"./components\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"navbar\">\r\n        <NavBar />\r\n      </div>\r\n      <div className=\"main\">\r\n        <Layout>\r\n          <div className=\"routes\">\r\n            <Switch>\r\n              <Route exact path=\"/\">\r\n                <Homepage />\r\n              </Route>\r\n              <Route exact path=\"/exchanges\">\r\n                <Exchanges />\r\n              </Route>\r\n              <Route exact path=\"/cryptocurrencies\">\r\n                <Cryptocurrencies />\r\n              </Route>\r\n              <Route exact path=\"/crypto/:coinId\">\r\n                <CryptoDetails />\r\n              </Route>\r\n              <Route exact path=\"/news\">\r\n                <News />\r\n              </Route>\r\n            </Switch>\r\n          </div>\r\n        </Layout>\r\n\r\n        <div className=\"footer\">\r\n          <Typography.Title\r\n            level={5}\r\n            style={{ color: \"white\", textAlign: \"center\" }}\r\n          >\r\n            Cryptoverse <br />\r\n            All rights reserved\r\n          </Typography.Title>\r\n          <Space>\r\n            <Link to=\"/\">Home</Link>\r\n            <Link to=\"/exchanges\">Exchanges</Link>\r\n            <Link to=\"/news\">News</Link>\r\n          </Space>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport { cryptoApi } from \"../services/cryptoApi\";\r\nimport { cryptoNewsApi } from \"../services/cryptoNewsApi\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    [cryptoApi.reducerPath]: cryptoApi.reducer,\r\n    [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport App from \"./App\";\r\nimport store from \"./app/store\";\r\n\r\nimport \"antd/dist/antd.css\";\r\nReactDOM.render(\r\n  <Router>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}