{"version":3,"sources":["images/cryptocurrency.png","components/NavBar.jsx","services/cryptoApi.js","components/Loader.jsx","components/Cryptocurrencies.jsx","components/Homepage.jsx","services/exchangesApi.js","components/Exchanges.jsx","services/cryptoNewsApi.js","components/News.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","App.js","app/store.js","index.js"],"names":["NavBar","_useState","useState","_useState2","_slicedToArray","activeMenu","setActiveMenu","_useState3","_useState4","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","_jsxs","className","children","_jsx","Avatar","src","icon","size","Typography","Title","level","Link","to","Button","onClick","MenuOutlined","Menu","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","cryptoApiHeaders","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","concat","getCryptoDetails","coinId","getCryptoHistory","_ref","timePeriod","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","Loader","Spin","Cryptocurrencies","simplified","_useGetCryptosQuery","cryptosList","data","isFetching","cryptos","setCryptos","searchTerm","setSearchTerm","_cryptosList$data","filteredData","coins","filter","coin","name","toLowerCase","includes","_Fragment","Input","placeholder","onChange","e","target","value","Row","gutter","map","currency","Col","xs","sm","lg","uuid","Card","title","rank","extra","iconUrl","alt","hoverable","millify","price","marketCap","change","Homepage","_data$data","globalStats","stats","span","Statistic","total","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","News","exchangesApiHeaders","exchangesApi","getExchanges","useGetExchangesQuery","Text","Panel","Collapse","Exchanges","_useGetExchangesQuery","cryptoExchanges","console","log","exchangesList","exchange","accordion","showArrow","header","trust_score_rank","image","year_established","trade_volume_24h_btc","trust_score","description","country","id","cryptoNewsApiHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","Option","Select","demoImage","setNewsCategory","_useGetCryptoNewsQuer","cryptoNews","showSearch","optionFilterProp","filterOption","input","option","indexOf","news","i","_news$image","_news$image$thumbnail","_news$provider$","_news$provider$$image","_news$provider$$image2","_news$provider$2","href","rel","thumbnail","contentUrl","style","maxWidth","maxHeight","substring","provider","moment","datePublished","startOf","fromNow","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Tooltip","Legend","LineChart","_coinHistory$data4","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","_coinHistory$data","_coinHistory$data$his","history","length","_coinHistory$data2","_coinHistory$data3","push","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","Line","options","scales","yAxes","ticks","beginAtZero","CryptoDetails","useParams","setTimePeriod","_useGetCryptoDetailsQ","cryptoDetails","DollarCircleOutlined","NumberOutlined","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfMarkets","numberOfExchanges","supply","confirmed","CheckOutlined","StopOutlined","ExclamationCircleOutlined","circulating","symbol","defaultValue","date","_ref2","HTMLReactParser","links","link","type","App","Layout","Routes","Route","path","color","textAlign","Space","configureStore","reducer","_reducer","_defineProperty","middleware","getDefaultMiddleware","ReactDOM","render","Router","basename","Provider","store","document","getElementById"],"mappings":"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","file":"static/js/main.a6822218.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Menu, Typography, Avatar } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  HomeOutlined,\r\n  MoneyCollectOutlined,\r\n  BulbOutlined,\r\n  FundOutlined,\r\n  MenuOutlined,\r\n} from \"@ant-design/icons\";\r\nimport icon from \"../images/cryptocurrency.png\";\r\nconst NavBar = () => {\r\n  const [activeMenu, setActiveMenu] = useState(true);\r\n  const [screenSize, setScreenSize] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => setScreenSize(window.innerWidth);\r\n    window.addEventListener(\"resize\", handleResize);\r\n    handleResize();\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (screenSize < 768) {\r\n      setActiveMenu(false);\r\n    } else {\r\n      setActiveMenu(true);\r\n    }\r\n  }, [screenSize]);\r\n  return (\r\n    <div className=\"nav-container\">\r\n      <div className=\"logo-container\">\r\n        <Avatar src={icon} size=\"large\" />\r\n        <Typography.Title level={2} className=\"logo\">\r\n          <Link to=\"/cryptosphere.github.io\">Cryptosphere</Link>\r\n        </Typography.Title>\r\n        <Button\r\n          className=\"menu-control-container\"\r\n          onClick={() => setActiveMenu(!activeMenu)}\r\n        >\r\n          <MenuOutlined />\r\n        </Button>\r\n      </div>\r\n      {activeMenu && (\r\n        <Menu theme=\"dark\">\r\n          <Menu.Item icon={<HomeOutlined />}>\r\n            <Link to=\"/cryptosphere.github.io\">Home</Link>\r\n          </Menu.Item>\r\n          <Menu.Item icon={<FundOutlined />}>\r\n            <Link to=\"/cryptosphere.github.io/cryptocurrencies\">Cryptocurrencies</Link>\r\n          </Menu.Item>\r\n          <Menu.Item icon={<MoneyCollectOutlined />}>\r\n            <Link to=\"/cryptosphere.github.io/exchanges\">Exchanges</Link>\r\n          </Menu.Item>\r\n          <Menu.Item icon={<BulbOutlined />}>\r\n            <Link to=\"/cryptosphere.github.io/news\">News</Link>\r\n          </Menu.Item>\r\n        </Menu>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default NavBar;\r\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nconst cryptoApiHeaders = {\r\n  \"x-rapidapi-host\": \"coinranking1.p.rapidapi.com\",\r\n  \"x-rapidapi-key\": \"ee116c5092msh79e40c6c9496bb1p128612jsn988c13148242\",\r\n};\r\nconst baseUrl = \"https://coinranking1.p.rapidapi.com\";\r\n\r\nconst createRequest = (url) => ({\r\n  url,\r\n  headers: cryptoApiHeaders,\r\n});\r\n\r\nexport const cryptoApi = createApi({\r\n  reducerPath: \"cryptoApi\",\r\n  baseQuery: fetchBaseQuery({ baseUrl }),\r\n  endpoints: (builder) => ({\r\n    getCryptos: builder.query({\r\n      query: (count) => createRequest(`/coins?limit=${count}`),\r\n    }),\r\n    getCryptoDetails: builder.query({\r\n      query: (coinId) => createRequest(`/coin/${coinId}`),\r\n    }),\r\n    getCryptoHistory: builder.query({\r\n      query: ({ coinId, timePeriod }) =>\r\n        createRequest(`/coin/${coinId}/history?timePeriod=${timePeriod}`),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetCryptosQuery,\r\n  useGetCryptoDetailsQuery,\r\n  useGetCryptoHistoryQuery,\r\n} = cryptoApi;\r\n","import React from \"react\";\r\nimport { Spin } from \"antd\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"loader\">\r\n      <Spin />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport millify from \"millify\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Row, Col, Input } from \"antd\";\r\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst Cryptocurrencies = ({ simplified }) => {\r\n  const count = simplified ? 10 : 96;\r\n\r\n  const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\r\n  const [cryptos, setCryptos] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  useEffect(() => {\r\n    const filteredData = cryptosList?.data?.coins.filter((coin) =>\r\n      coin.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n    setCryptos(filteredData);\r\n  }, [cryptosList, searchTerm]);\r\n  if (isFetching) return Loader;\r\n  return (\r\n    <>\r\n      {!simplified && (\r\n        <div className=\"search-crypto\">\r\n          <Input\r\n            placeholder=\"Search Cryptocurrency\"\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n        </div>\r\n      )}\r\n      <Row gutter={[32, 32]} className=\"crypto-card-container\">\r\n        {cryptos?.map((currency) => (\r\n          <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={currency.uuid}>\r\n            <Link to={`/crypto/${currency.uuid}`}>\r\n              <Card\r\n                title={`${currency.rank}. ${currency.name}`}\r\n                extra={<img className=\"crypto-image\" src={currency.iconUrl} alt=\"coin\" />}\r\n                hoverable\r\n              >\r\n                <p>Price: {millify(currency.price)}</p>\r\n                <p>Market Cap: {millify(currency.marketCap)}</p>\r\n                <p>Daily Change: {millify(currency.change)}% </p>\r\n              </Card>\r\n            </Link>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cryptocurrencies;\r\n","import React from \"react\";\r\nimport millify from \"millify\";\r\nimport { Typography, Row, Col, Statistic } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\r\nimport { Cryptocurrencies, News } from \"../components\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst { Title } = Typography;\r\nconst Homepage = () => {\r\n  const { data, isFetching } = useGetCryptosQuery(10);\r\n  if (isFetching) return Loader;\r\n  const globalStats = data?.data?.stats;\r\n  return (\r\n    <>\r\n      <Title level={2} className=\"heading\">\r\n        Global Crypto Stats\r\n      </Title>\r\n      <Row>\r\n        <Col span={12}>\r\n          <Statistic title=\"Total Cryptocurrenices\" value={globalStats.total} />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic\r\n            title=\"Total Exchanges\"\r\n            value={millify(globalStats.totalExchanges)}\r\n          />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic\r\n            title=\"Total Market Cap\"\r\n            value={millify(globalStats.totalMarketCap)}\r\n          />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic\r\n            title=\"Total 24h Volume\"\r\n            value={millify(globalStats.total24hVolume)}\r\n          />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic\r\n            title=\"Total Markets\"\r\n            value={millify(globalStats.totalMarkets)}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <div className=\"home-heading-container\">\r\n        <Title level={2} className=\"home-title\">\r\n          Top 10 Cryptocurrencies in the world\r\n        </Title>\r\n        <Title level={3} className=\"show-more\">\r\n          <Link to=\"/cryptocurrencies\">Show More</Link>\r\n        </Title>\r\n      </div>\r\n      <Cryptocurrencies simplified />\r\n      <div className=\"home-heading-container\">\r\n        <Title level={2} className=\"home-title\">\r\n          Latest Crypto News\r\n        </Title>\r\n        <Title level={3} className=\"show-more\">\r\n          <Link to=\"/news\">Show More</Link>\r\n        </Title>\r\n      </div>\r\n      <News simplified />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\nconst exchangesApiHeaders = {\r\n    'X-RapidAPI-Host': 'coingecko.p.rapidapi.com',\r\n    'X-RapidAPI-Key': 'fac9c967f1mshb0891bed0d223f5p1f977fjsnd9031551ed8e'\r\n};\r\n\r\nconst baseUrl = \"https://coingecko.p.rapidapi.com\";\r\n\r\nconst createRequest = (url) => ({\r\n  url,\r\n  headers: exchangesApiHeaders,\r\n});\r\n\r\nexport const exchangesApi = createApi({\r\n  reducerPath: \"exchangesApi\",\r\n  baseQuery: fetchBaseQuery({ baseUrl }),\r\n  endpoints: (builder) => ({\r\n    getExchanges: builder.query({\r\n      query: () => createRequest(`/exchanges`),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useGetExchangesQuery } = exchangesApi;\r\n","import React from \"react\";\r\nimport millify from \"millify\";\r\nimport { Collapse, Row, Col, Typography, Avatar } from \"antd\";\r\nimport HTMLReactParser from \"html-react-parser\";\r\n\r\nimport { useGetExchangesQuery } from \"../services/exchangesApi\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst { Text } = Typography;\r\nconst { Panel } = Collapse;\r\n\r\nconst Exchanges = () => {\r\n  const { data: cryptoExchanges, isFetching } = useGetExchangesQuery();\r\n  console.log(isFetching)\r\n  if (isFetching) return <Loader />;\r\n  const exchangesList = cryptoExchanges;\r\n  console.log(exchangesList)\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col span={6}>Exchanges</Col>\r\n        <Col span={6}>Year Established</Col>\r\n        <Col span={6}>24h Trade Volume</Col>\r\n        <Col span={6}>Trust Score</Col>\r\n      </Row>\r\n      <Row>\r\n        {exchangesList.map((exchange) => (\r\n          <Col span={24}>\r\n            <Collapse accordion>\r\n              <Panel\r\n                key={exchange.id}\r\n                showArrow={false}\r\n                header={\r\n                  <Row>\r\n                    <Col span={6}>\r\n                      <Text>\r\n                        <strong>{exchange.trust_score_rank}.</strong>\r\n                      </Text>\r\n                      <Avatar\r\n                        className=\"exchange-image\"\r\n                        src={exchange.image}\r\n                      />\r\n                      <Text>\r\n                        <strong>{exchange.name}</strong>\r\n                      </Text>\r\n                    </Col>\r\n                    <Col span={7}>{exchange.year_established}</Col>\r\n                    <Col span={6}>{millify(exchange.trade_volume_24h_btc)}</Col>\r\n                    <Col span={5}>{exchange.trust_score}</Col>\r\n                  </Row>\r\n                }\r\n              >\r\n                {exchange?.description || `${exchange?.country} - ${exchange?.url}` || \"\"}\r\n              </Panel>\r\n            </Collapse>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Exchanges;\r\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\nconst cryptoNewsApiHeaders = {\r\n  \"x-bingapis-sdk\": \"true\",\r\n  \"x-rapidapi-host\": \"bing-news-search1.p.rapidapi.com/news\",\r\n  \"x-rapidapi-key\": \"ee116c5092msh79e40c6c9496bb1p128612jsn988c13148242\",\r\n};\r\n\r\nconst baseUrl = \"https://bing-news-search1.p.rapidapi.com/news\";\r\n\r\nconst createRequest = (url) => ({\r\n  url,\r\n  headers: cryptoNewsApiHeaders,\r\n});\r\n\r\nexport const cryptoNewsApi = createApi({\r\n  reducerPath: \"cryptoNewsApi\",\r\n  baseQuery: fetchBaseQuery({ baseUrl }),\r\n  endpoints: (builder) => ({\r\n    getCryptoNews: builder.query({\r\n      query: ({ newsCategory, count }) =>\r\n        createRequest(\r\n          `/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`\r\n        ),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Select, Typography, Row, Col, Avatar, Card } from \"antd\";\r\nimport moment from \"moment\";\r\nimport { useGetCryptoNewsQuery } from \"../services/cryptoNewsApi\";\r\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst { Text, Title } = Typography;\r\nconst { Option } = Select;\r\nconst demoImage =\r\n  \"http://coinrevolution.com/wp-content/uploads/2020/06/cryptonews.jpg\";\r\nconst News = ({ simplified }) => {\r\n  const [newsCategory, setNewsCategory] = useState(\"Cryptocurrency\");\r\n  const count = simplified ? 6 : 12;\r\n  const { data } = useGetCryptosQuery(100);\r\n  const { data: cryptoNews, isFetching } = useGetCryptoNewsQuery({\r\n    newsCategory: newsCategory,\r\n    count,\r\n  });\r\n  const [news, setNews] = useState([]);\r\n\r\n  if (isFetching) return Loader;\r\n  return (\r\n    <>\r\n      <Row gutter={[24, 24]}>\r\n        {!simplified && (\r\n          <Col span={24}>\r\n            <Select\r\n              showSearch\r\n              className=\"select-news\"\r\n              placeholder=\"Select a new Crypto\"\r\n              optionFilterProp=\"children\"\r\n              onChange={(value) => setNewsCategory(value)}\r\n              filterOption={(input, option) =>\r\n                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n              }\r\n            >\r\n              <Option value=\"Cryptocurrency\">Cryptocurrency</Option>\r\n              {data?.data?.coins.map((coin) => (\r\n                <Option value={coin.name}>{coin.name}</Option>\r\n              ))}\r\n            </Select>\r\n          </Col>\r\n        )}\r\n        {cryptoNews.value.map((news, i) => (\r\n          <Col xs={24} sm={12} lg={8} key={i}>\r\n            <Card hoverable className=\"news-card\">\r\n              <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\r\n                <div className=\"news-image-container\">\r\n                  <Title className=\"news-title\" level={4}>\r\n                    {news.name}\r\n                  </Title>\r\n                  <img\r\n                    src={news?.image?.thumbnail?.contentUrl || demoImage}\r\n                    alt=\"news\"\r\n                    style={{ maxWidth: \"200px\", maxHeight: \"100px\" }}\r\n                  />\r\n                </div>\r\n                <p>\r\n                  {news.description > 100\r\n                    ? `${news.description.substring(0, 100)}...`\r\n                    : news.description}\r\n                </p>\r\n                <div className=\"provider-container\">\r\n                  <div>\r\n                    <Avatar\r\n                      src={\r\n                        news.provider[0]?.image?.thumbnail?.contentUrl ||\r\n                        demoImage\r\n                      }\r\n                      alt=\"news\"\r\n                    />\r\n                    <Text className=\"provider-name\">\r\n                      {news.provider[0]?.name}\r\n                    </Text>\r\n                  </div>\r\n                  <Text>\r\n                    {moment(news.datePublished).startOf(\"ss\").fromNow()}\r\n                  </Text>\r\n                </div>\r\n              </a>\r\n            </Card>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default News;\r\n","import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { Col, Row, Typography } from \"antd\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\r\n  const coinPrice = [];\r\n  const coinTimestamp = [];\r\n  console.log(coinHistory)\r\n  for (let i = coinHistory?.data?.history?.length - 1; i >=0 ; i -= 1) {\r\n    coinPrice.push(coinHistory?.data?.history[i].price);\r\n    coinTimestamp.push(\r\n      new Date(coinHistory?.data?.history[i].timestamp*1000).toLocaleDateString(\"en-UK\")\r\n    );\r\n  }\r\n  \r\n  \r\n  const data = {\r\n    labels: coinTimestamp,\r\n    datasets: [\r\n      {\r\n        label: \"Price In USD\",\r\n        data: coinPrice,\r\n        fill: false,\r\n        backgroundColor: \"#0071bd\",\r\n        borderColor: \"#0071bd\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n  return (\r\n    <>\r\n      <Row className=\"chart-header\">\r\n        <Typography.Title level={2} className=\"chart-title\">\r\n          {coinName} Price Chart{\" \"}\r\n        </Typography.Title>\r\n        <Col className=\"price-container\">\r\n          <Typography.Title level={5} className=\"price-change\">\r\n            Change: {coinHistory?.data?.change}%\r\n          </Typography.Title>\r\n          <Typography.Title level={5} className=\"current-price\">\r\n            Current {coinName} Price: $ {currentPrice}\r\n          </Typography.Title>\r\n        </Col>\r\n      </Row>\r\n      <Line data={data} options={options} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LineChart;\r\n","import React, { useState } from \"react\";\r\nimport HTMLReactParser from \"html-react-parser\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport millify from \"millify\";\r\nimport { Col, Row, Typography, Select } from \"antd\";\r\nimport {\r\n  MoneyCollectOutlined,\r\n  DollarCircleOutlined,\r\n  FundOutlined,\r\n  ExclamationCircleOutlined,\r\n  StopOutlined,\r\n  TrophyOutlined,\r\n  CheckOutlined,\r\n  NumberOutlined,\r\n  ThunderboltOutlined,\r\n} from \"@ant-design/icons\";\r\nimport {\r\n  useGetCryptoDetailsQuery,\r\n  useGetCryptoHistoryQuery,\r\n} from \"../services/cryptoApi\";\r\nimport LineChart from \"./LineChart\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst { Title, Text } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst CryptoDetails = () => {\r\n  const { coinId } = useParams();\r\n  const [timePeriod, setTimePeriod] = useState(\"24h\");\r\n\r\n  const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\r\n  const { data: coinHistory } = useGetCryptoHistoryQuery({\r\n    coinId,\r\n    timePeriod,\r\n  });\r\n\r\n  const cryptoDetails = data?.data?.coin;\r\n\r\n  if (isFetching) return Loader;\r\n  const time = [\"3h\", \"24h\", \"7d\", \"30d\", \"3m\", \"1y\", \"3y\", \"5y\"];\r\n\r\n  const stats = [\r\n    {\r\n      title: \"Price to USD\",\r\n      value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`,\r\n      icon: <DollarCircleOutlined />,\r\n    },\r\n    { title: \"Rank\", value: cryptoDetails.rank, icon: <NumberOutlined /> },\r\n    {\r\n      title: \"24h Volume\",\r\n      value: `$ ${cryptoDetails[\"24hVolume\"] && millify(cryptoDetails[\"24hVolume\"])}`,\r\n      icon: <ThunderboltOutlined />,\r\n    },\r\n    {\r\n      title: \"Market Cap\",\r\n      value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`,\r\n      icon: <DollarCircleOutlined />,\r\n    },\r\n    {\r\n      title: \"All-time-high(daily avg.)\",\r\n      value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`,\r\n      icon: <TrophyOutlined />,\r\n    },\r\n  ];\r\n\r\n  const genericStats = [\r\n    {\r\n      title: \"Number Of Markets\",\r\n      value: cryptoDetails.numberOfMarkets,\r\n      icon: <FundOutlined />,\r\n    },\r\n    {\r\n      title: \"Number Of Exchanges\",\r\n      value: cryptoDetails.numberOfExchanges,\r\n      icon: <MoneyCollectOutlined />,\r\n    },\r\n    {\r\n      title: \"Aprroved Supply\",\r\n      value: cryptoDetails.supply.confirmed ? (\r\n        <CheckOutlined />\r\n      ) : (\r\n        <StopOutlined />\r\n      ),\r\n      icon: <ExclamationCircleOutlined />,\r\n    },\r\n    {\r\n      title: \"Total Supply\",\r\n      value: `$ ${millify(cryptoDetails.supply.circulating)}`,\r\n      icon: <ExclamationCircleOutlined />,\r\n    },\r\n    {\r\n      title: \"Circulating Supply\",\r\n      value: `$ ${millify(cryptoDetails.supply.circulating)}`,\r\n      icon: <ExclamationCircleOutlined />,\r\n    },\r\n  ];\r\n  return (\r\n    <>\r\n      <Col className=\"coin-detail-container\">\r\n        <Col className=\"coin-heading-container\">\r\n          <Title level={2} className=\"coin-name\">\r\n            {cryptoDetails.name} ({cryptoDetails.symbol}) Price\r\n          </Title>\r\n          <p>\r\n            {cryptoDetails.name} live price in us dollars. View value\r\n            statistics, market cap and supply.\r\n          </p>\r\n        </Col>\r\n        <Select\r\n          defaultValue=\"7d\"\r\n          className=\"select-timeperiod\"\r\n          placeholder=\"Select Time Period\"\r\n          onChange={(value) => setTimePeriod(value)}\r\n        >\r\n          {time.map((date) => (\r\n            <Option key={date}>{date}</Option>\r\n          ))}\r\n        </Select>\r\n        <LineChart\r\n          coinHistory={coinHistory}\r\n          currentPrice={millify(cryptoDetails.price)}\r\n          coinName={cryptoDetails.name}\r\n        />\r\n        <Col className=\"stats-container\">\r\n          <Col className=\"coin-value-statistics\">\r\n            <Col className=\"coin-value-statistics-heading\">\r\n              <Title level={3} className=\"coin-detailes-heading\">\r\n                {cryptoDetails.name} Value Statistics\r\n              </Title>\r\n              <p>An overview of showing the stats of {cryptoDetails.name}</p>\r\n            </Col>\r\n            {stats.map(({ icon, title, value }) => (\r\n              <Col className=\"coin-stats\">\r\n                <Col className=\"coin-stats-name\">\r\n                  <Text>{icon}</Text>\r\n                  <Text>{title}</Text>\r\n                </Col>\r\n                <Text className=\"stats\">{value}</Text>\r\n              </Col>\r\n            ))}\r\n          </Col>\r\n          <Col className=\"other-stats-info\">\r\n            <Col className=\"coin-value-statistics-heading\">\r\n              <Title level={3} className=\"coin-detailes-heading\">\r\n                Other Statistics\r\n              </Title>\r\n              <p>An overview showing the stats of all cryptocurrencies</p>\r\n            </Col>\r\n            {genericStats.map(({ icon, title, value }) => (\r\n              <Col className=\"coin-stats\">\r\n                <Col className=\"coin-stats-name\">\r\n                  <Text>{icon}</Text>\r\n                  <Text>{title}</Text>\r\n                </Col>\r\n                <Text className=\"stats\">{value}</Text>\r\n              </Col>\r\n            ))}\r\n          </Col>\r\n        </Col>\r\n        <Col className=\"coin-desc-link\">\r\n          <Row className=\"coin-desc\">\r\n            <Title level={3} className=\"coin-details-heading\">\r\n              What is {cryptoDetails.name}\r\n              {HTMLReactParser(cryptoDetails.description)}\r\n            </Title>\r\n          </Row>\r\n          <Col className=\"coin-links\">\r\n            <Title level={3} className=\"coin-details-heading\">\r\n              {cryptoDetails.name} Links\r\n            </Title>\r\n            {cryptoDetails.links.map((link) => (\r\n              <Row className=\"coin-link\" key={link.name}>\r\n                <Title level={5} className=\"link-name\">\r\n                  {link.type}\r\n                </Title>\r\n                <a href={link.url} target=\"_blank\" rel=\"noreferrer\">\r\n                  {link.name}\r\n                </a>\r\n              </Row>\r\n            ))}\r\n          </Col>\r\n        </Col>\r\n      </Col>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CryptoDetails;\r\n","import React from \"react\";\r\nimport {  Route, Link, Routes } from \"react-router-dom\";\r\n\r\nimport { Layout, Typography, Space } from \"antd\";\r\nimport \"./App.css\";\r\nimport {\r\n  NavBar,\r\n  Exchanges,\r\n  Homepage,\r\n  Example,\r\n  Cryptocurrencies,\r\n  News,\r\n  CryptoDetails,\r\n} from \"./components\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"navbar\">\r\n        <NavBar />\r\n      </div>\r\n      <div className=\"main\">\r\n        <Layout>\r\n          <div className=\"routes\">\r\n            <Routes>\r\n              <Route path=\"/cryptosphere.github.io\">\r\n                <Homepage />\r\n                {/* <h1>Homepage</h1> */}\r\n              </Route>\r\n              <Route path=\"/cryptosphere.github.io/exchanges\">\r\n                <Exchanges />\r\n              </Route>\r\n              <Route path=\"/cryptosphere.github.io/cryptocurrencies\">\r\n                <Cryptocurrencies />\r\n              </Route>\r\n              <Route path=\"/cryptosphere.github.io/crypto/:coinId\">\r\n                <CryptoDetails />\r\n              </Route>\r\n              <Route path=\"/cryptosphere.github.io/news\">\r\n                <News />\r\n              </Route>\r\n            </Routes>\r\n          </div>\r\n        </Layout>\r\n\r\n        <div className=\"footer\">\r\n          <Typography.Title\r\n            level={5}\r\n            style={{ color: \"white\", textAlign: \"center\" }}\r\n          >\r\n            Cryptosphere <br />\r\n            All rights not reserved\r\n          </Typography.Title>\r\n          <Space>\r\n            <Link to=\"/cryptosphere.github.io\">Home</Link>\r\n            <Link to=\"/cryptosphere.github.io/exchanges\">Exchanges</Link>\r\n            <Link to=\"/cryptosphere.github.io/news\">News</Link>\r\n          </Space>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport { cryptoApi } from \"../services/cryptoApi\";\r\nimport { cryptoNewsApi } from \"../services/cryptoNewsApi\";\r\nimport {exchangesApi} from \"../services/exchangesApi\"\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    [cryptoApi.reducerPath]: cryptoApi.reducer,\r\n    [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\r\n    [exchangesApi.reducerPath]: exchangesApi.reducer,\r\n  },\r\n  middleware: (getDefaultMiddleware) =>\r\n        getDefaultMiddleware().concat(cryptoApi.middleware,cryptoNewsApi.middleware,exchangesApi.middleware),\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport App from \"./App\";\r\nimport store from \"./app/store\";\r\n\r\nimport \"antd/dist/antd.css\";\r\nReactDOM.render(\r\n  <Router basename='/cryptosphere.github.io'>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}